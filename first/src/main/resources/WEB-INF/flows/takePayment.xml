<view-state id="takePayment" model="flowScope.paymentDetails">
    <var name="customer" class="com.springinaction.pizza.domain.Customer"/>
    <evaluate result="viewScope.toppingsList" expression="T(com.springinaction.pizza.domain.Topping).asList()"/>
    <set name="flowScope.pizza" value="new com.springinaction.pizza.domain.Pizza()"/>
    <action-state id="saveOrder">
        <evalutate expression="pizzaFlowActions.saveOrder(order)"/>
        <transition to="thankYou"/>
    </action-state>
    <decision-state id="checkDeliveryArea">
        <if test="pizzaFlowActions.checkDeliberyArea(customer.zipCode)"
            then="addCustomer"
            else="deliveryWarning"/>
    </decision-state>
    <subflow-state id="order" subflow="pizza/order">
        <input name="order" value="order"/>
        <transition on="orderCreated" to="payment"/>
    </subflow-state>
    <action-state id="completeOrder">
        <transition on-exception="com.springinaction.pizza.service.CustomerNotFoundException" to="registrationForm"/>
    </action-state>
    <action-state id="registrationForm"/>
    <end-state id="customerReady"/>
    <end-state id="customerNotReady"/>
    <global-transitions>
        <transition on="cancel" to="endState"/>
    </global-transitions>
</view-state>